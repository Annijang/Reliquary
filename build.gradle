/*

ForgeGradle building for Reliquary! This script is meant to be a easy way to build the mod, as well as example for implementing ForgeGradle in your own mods.

How to use:

(from a Terminal or Command Prompt)
1. './gradlew setupCIWorkspace'
2. './gradlew build'
3. Enjoy!

*/

// This simple grabs the latest 'forge' plugin, or ForgeGradle, from Forge's servers.
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

// We apply the 'forge' plugin, so ForgeGradle can do it's stuff.
apply plugin: 'net.minecraftforge.gradle.forge'

group = 'xreliquary' // Your main package.
version = "1.3"
archivesBaseName = 'Reliquary'

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
	version = "1.8.9-11.15.0.1688"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20151216"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

jar {
    manifest {
        attributes("FMLCorePlugin": "xreliquary.common.asm.DepLoader", "FMLCorePluginContainsFMLMod": "true")
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // Replace stuff in mcmod.info and in .lang files, nothing else.
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include 'mcmod.info'

        // Replace version and mcversion.
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // Copy everything else that wasn't replaced.
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.lang'
        exclude 'mcmod.info'
    }
}
